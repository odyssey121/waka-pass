{"version":3,"sources":["component/auth/redux/actions.js","component/auth/redux/reducer.js","store/reducer.js","component/auth/redux/requests/loginRequest.js","component/auth/redux/sagas.js","store/saga.js","store/store.js","middleware/history.js","component/notFoundPage/NotFoundPage.js","component/modal/modal.js","component/table/index.js","component/conf/index.js","component/month/index.js","component/day/index.js","component/questionPopover/questionPopover.js","component/showModal/ShowModal.js","component/auth/Login.js","component/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["createActions","login","getUser","getUserSuccess","getUserFailure","authentication","handleActions","authAction","state","_payload","loading","payload","user","status","errorMessage","message","combineReducers","loginRequest","values","fetch","method","headers","Accept","body","JSON","stringify","loginWatcher","loginSaga","action","a","response","console","log","json","data","err","takeEvery","toString","fork","createAppStore","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeWithDevTools","compose","store","createStore","rootReducer","applyMiddleware","run","sagas","customHistory","createBrowserHistory","notFoundPage","this","props","errorText","errorCaption","id","className","React","Component","confirm","Modal","placeholder","type","style","fontSize","spin","normTime","time","newTime","h","m","label","key","DownloadBtn","result","useState","csvLink","setCsvLink","useEffect","link","document","getElementsByClassName","item","onClick","obj","title","icon","content","onOk","click","okText","cancelText","centered","filename","TimeTable","history","monthFilter","daysFilter","renderResult","undefined","map","record","index","running_min","day_worked","String","days","filter","r","date","slice","length","day_more","day_less","onRow","last_name","replace","push","locale","emptyText","dataSource","columns","cols","dataIndex","width","render","sorter","b","localeCompare","renderColumns","config","initialValue","required","validate","trigger","rules","Option","Select","Form","create","form","rest","calculateDate","retrieve","month","scope_days","reduce","acc","includes","forEach","day","alert","setLoading","setResult","moment","utc","format","setMonthFilter","getData","async","rawResponse","onChange","e","value","Days","match","params","to","ghost","questionPopover","children","position","fill","height","placement","xmlns","fillRule","clipRule","d","TextArea","Input","Fragment","ShowModal","visible","showModal","setState","handleOk","handleCancel","onCancel","cancelButtonProps","Item","getFieldDecorator","rows","PureComponent","connect","submitLogin","persist","validateFields","autoComplete","onSubmit","Text","Typography","Header","href","strong","code","App","exact","path","Boolean","location","hostname","ReactDOM","createHistory","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kaAOIA,YACF,QACA,WACA,mBACA,oBARAC,E,EAAAA,MACAC,E,EAAAA,QACAC,E,EAAAA,eACAC,E,EAAAA,eCMWC,EAAiBC,aAAa,mBACtCC,GAAmB,SAACC,EAAOC,GACxB,OAAO,eAAKD,EAAZ,CAAmBE,SAAS,OAFO,cAKtCH,GAAqB,SAACC,EAAOC,GAAR,sBACfD,EADe,CACRE,SAAS,OANgB,cAQtCH,GAA4B,SAACC,EAAD,OAAUG,EAAV,EAAUA,QAAV,sBACtBH,EADsB,CACfE,SAAS,EAAOE,KAAMD,EAASE,OAAQ,eATd,cAWtCN,GAA4B,SAACC,EAAD,OAAUG,EAAV,EAAUA,QAAV,sBACtBH,EADsB,CACfE,SAAS,EAAOI,aAAcH,EAAQI,QAASF,OAAQ,aAZ9B,GAPzB,CACdH,SAAS,EACTE,KAAM,KACNC,OAAQ,OACRC,aAAc,OCNHE,4BAAgB,CAC3BX,mB,4CCJSY,EAAe,SAAAC,GAAM,OAAIC,MAAM,SAAU,CAClDC,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,M,WCuBRQ,G,SAzBDC,E,8EAAhB,WAA0BC,GAA1B,mBAAAC,EAAA,6DACYlB,EAAYiB,EAAZjB,QADZ,qBAE2BM,EAAaN,IAFxC,cAEUmB,EAFV,OAGIC,QAAQC,IAAIF,GAHhB,qBAIuBA,EAASG,QAJhC,OAIUC,EAJV,OAKIH,QAAQC,IAAIE,GACZ,IACI/B,EAAe+B,EAAKtB,MAGtB,MAAOuB,GACLJ,QAAQC,IAAIG,GAXpB,6C,sBAyBO,SAAUT,IAAV,iEACH,OADG,SACGU,YAAUnC,EAAMoC,WAAYV,GAD/B,uC,kBCzBQ,8EACX,OADW,SACLW,YAAKZ,GADA,uCCIf,IAoBea,EApBQ,WACrB,IAAMC,EAAiBC,cAEjBC,EACJC,OAAOC,sCACPC,uBACAC,UAEIC,EAAQC,sBACZC,EACAP,EAAiBQ,0BAAgBV,KAMnC,OAFAA,EAAeW,IAAIC,GAEZL,G,QCtBMM,EADOC,c,6CCgBPC,G,wLAZH,IAAD,EAC6BC,KAAKC,MAAjCC,EADD,EACCA,UAAWC,EADZ,EACYA,aACnB,OACE,yBAAKC,GAAG,gBACN,wBAAIC,UAAU,gBAAgBF,GAC9B,yBAAKE,UAAU,aAAaH,Q,GANTI,IAAMC,Y,4DCA3BC,G,OAAUC,IAAMD,SCEhBE,EAAc,kBAAC,IAAD,CAAMC,KAAK,UAAUC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAEhEC,GAAW,SAAAC,GACf,IAAIC,EACAC,EAAKF,EAAO,GAAM,EACtB,GAAIE,EAAG,CACL,IAAIC,EAAIH,EAAO,GACXG,EAAI,KAAIA,EAAI,IAAMA,GACtBF,EAAUC,EAAI,WAAQC,EAAI,eAE1BF,EAAUD,EAAO,UAEnB,OAAOC,GAGHpD,GAAU,CACd,CAAEuD,MAAO,2BAAQC,IAAK,QACtB,CAAED,MAAO,6CAAWC,IAAK,aACzB,CAAED,MAAO,iCAASC,IAAK,eACvB,CAAED,MAAO,wFAAmBC,IAAK,cACjC,CAAED,MAAO,+BAAYC,IAAK,YAC1B,CAAED,MAAO,+BAAYC,IAAK,aAGtBC,GAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACJC,mBAAS,MADL,mBAC3BC,EAD2B,KAClBC,EADkB,KAOlC,OALAC,qBAAU,WACR,IAAIC,EAAOC,SAASC,uBAAuB,WAC3CJ,EAAWE,EAAKG,KAAK,IAAM,QAC1B,IAGD,6BACE,kBAAC,IAAD,CACEpB,KAAK,aACLqB,QAAS,kBDnCWC,ECoCN,CACVC,MAAO,oDACPC,KAAM,kBAAC,IAAD,CAAMxB,KAAK,YACjByB,QACE,gTAEFC,KAAM,WACJZ,EAAQa,SAEVC,OAAQ,yDD5ChB/B,EAAQ,aACJ0B,MAAO,oDACPC,KAAM,kBAAC,IAAD,CAAMxB,KAAK,oBACjByB,QAAS,wUACTI,WAAY,uCACZD,OAAQ,mDACRE,UAAU,EACVpC,UAAW,eACR4B,IATgB,IAACA,KCiDtB,kBAAC,UAAD,CACE5B,UAAU,UACVqC,SAAU,mBACVhE,KAAM6C,EACN1D,QAASA,OA8IF8E,GAnIG,SAAC,GAA2D,IAAzDpB,EAAwD,EAAxDA,OAAQrE,EAAgD,EAAhDA,QAAS0F,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAsEpDC,EAAe,WACnB,YAAoBC,IAAhBH,EACKtB,EACJ0B,KAAI,SAACC,EAAQC,GAAT,sBACAD,EADA,CAEH7B,IAAK8B,EACLC,YAAaF,EAAOE,aAAerC,GAASmC,EAAOE,aACnDC,WAAYC,OACVJ,EAAOK,KAAKC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,MAAM,IAAMd,KAAae,QAE1DC,SAAUP,OACRJ,EAAOK,KAAKC,QACV,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,MAAM,IAAMd,GAAeY,EAAEL,YAAc,OACvDQ,QAEJE,SAAUR,OACRJ,EAAOK,KAAKC,QACV,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,MAAM,IAAMd,GAAeY,EAAEL,YAAc,OACvDQ,aAGLJ,QAAO,SAAAN,GAAM,OACZL,EACIK,EAAOQ,MAAQb,EACfK,EAAOQ,KAAKC,MAAM,IAAMb,KAGzBvB,EAAO0B,KAAI,SAACC,EAAQC,GAAT,sBACbD,EADa,CAEhB7B,IAAK8B,EACLC,YAAaF,EAAOE,aAAerC,GAASmC,EAAOE,mBAQzD,OACE,yBAAK/C,UAAU,kBACXnD,GACA,yBAAKmD,UAAU,YACb,kBAAC,GAAD,CAAakB,OAAQwB,OAIzB,kBAAC,IAAD,CACEgB,MAAO,SAACb,EAAQC,GAAT,MAAoB,CACzBA,QACAnB,QAAS,kBACPa,IAfSmB,EAgBCd,EAAOc,UAhBGN,EAgBQb,EAAYoB,QAAQ,IAAK,KAf7DpB,GAAeD,EAAQsB,KAAR,kBAAwBF,EAAxB,YAAqCN,KADpC,IAACM,EAAWN,KAkBxBS,OAAQ,CAAEC,UAAWlH,EAAUwD,EAAc,kGAC7C2D,WAAYtB,IACZuB,QA5HgB,WACpB,IAAIC,EAAO,CACT,CACErC,MAAO,2BACPsC,UAAW,OACXnD,IAAK,OACLoD,MAAO,MACPC,OAAQ,SAAAhB,GAAI,OAAI,6BAAMA,GAAQA,IAC9BiB,OAAQ,SAACtG,EAAGuG,GACV,OAAOvG,EAAEqF,KAAKmB,cAAcD,EAAElB,QAGlC,CACExB,MAAO,6CACPsC,UAAW,YACXnD,IAAK,YACLoD,MAAO,MACPC,OAAQ,SAAAV,GAAS,OAAI,6BAAMA,GAAaA,IACxCW,OAAQ,SAACtG,EAAGuG,GACV,OAAOvG,EAAE2F,UAAUa,cAAcD,EAAEZ,aAGvC,CACE9B,MAAO,iCACPsC,UAAW,cACXnD,IAAK,cACLoD,MAAO,MACPC,OAAQ,SAAAtB,GAAW,OAAI,6BAAMA,GAAeA,IAC5CuB,OAAQ,SAACtG,EAAGuG,GACV,OAAOA,EAAExB,YAAYyB,cAAcxG,EAAE+E,gBAqC3C,YAAuBJ,IAAhBH,EAAA,UAAgC0B,EAhCpB,CACjB,CACErC,MAAO,wFACPsC,UAAW,aACXnD,IAAK,aACLoD,MAAO,MACPC,OAAQ,SAAArB,GAAU,OAAI,6BAAMA,GAAcA,IAC1CsB,OAAQ,SAACtG,EAAGuG,GACV,OAAOA,EAAEvB,WAAahF,EAAEgF,aAG5B,CACEnB,MAAO,8DACPsC,UAAW,WACXnD,IAAK,WACLoD,MAAO,MACPC,OAAQ,SAAAb,GAAQ,OAAI,6BAAMA,GAAYA,IACtCc,OAAQ,SAACtG,EAAGuG,GACV,OAAOA,EAAEf,SAAWxF,EAAEwF,WAG1B,CACE3B,MAAO,8DACPsC,UAAW,WACXnD,IAAK,WACLoD,MAAO,MACPC,OAAQ,SAAAZ,GAAQ,OAAI,6BAAMA,GAAYA,IACtCa,OAAQ,SAACtG,EAAGuG,GACV,OAAOA,EAAEd,SAAWzF,EAAEyF,aAIrB,UAA2DS,GA0DrDO,O,mBCnMJC,GAAS,SAACC,EAAcC,GAAf,MAA6B,CAC/CD,eACAE,SAAU,CACN,CACIC,QAAS,WACTC,MAAO,CACH,CACIH,SAAUA,EACV1H,QAAS,iK,oBCDrB8H,GAAWC,KAAXD,OAmMOE,YAAKC,QAALD,EA5If,YAAkC,EAAjBE,KAAkB,IAATC,EAAQ,wBAW1BC,EAAgB,SAACC,GACrB,GAAKA,EAASrC,MAASqC,EAASC,MAAhC,CAIA,IAAIC,EAAa,GACDF,EAASC,MAAME,QAC7B,SAACC,EAAK9C,GAAN,OACE8C,EAAIC,SAAS/C,EAAOc,WAAagC,EAAjC,sBAA2CA,GAA3C,CAAgD9C,EAAOc,cACzD,IACAkC,SAAQ,SAAA9I,GACR0I,EAAW1I,GAAQwI,EAASrC,KAAKC,QAAO,SAAA2C,GAAG,OAAIA,EAAInC,WAAa5G,QAGlE,OAAOwI,EAASC,MAAM5C,KAAI,SAAAC,GAAM,sBAAUA,EAAV,CAAkB,KAAQ4C,EAAW5C,EAAOc,gBAZ1EoC,MAAM,uBAbsB,EA2CF5E,oBAAS,GA3CP,mBA2CzBtE,EA3CyB,KA2ChBmJ,EA3CgB,OA4CJ7E,mBAAS,IA5CL,mBA4CzBD,EA5CyB,KA4CjB+E,EA5CiB,OA6CJ9E,mBAAS,MA7CL,gCA8CMA,mBAAS+E,KAAOC,MAAMC,OAAO,WAAW5H,aA9C9C,mBA8CzBgE,EA9CyB,KA8CZ6D,EA9CY,KAkD1BC,EAAU,4BAAAtI,EAAAuI,OAAA,uDACdP,GAAW,GADG,WAAAhI,EAAA,MAEYV,MAAM,WAFlB,cAERkJ,EAFQ,kBAAAxI,EAAA,MAGQwI,EAAYpI,QAHpB,OAGR2D,EAHQ,OAIdiE,GAAW,GACXC,EAAUX,EAAcvD,IALV,sCAgBhB,OANAT,qBAAU,WACRgF,MACC,IAKD,yBAAKtG,UAAU,OACX,yBAAKA,UAAU,OAoCf,6BACE,yBAAKA,UAAU,aACb,6BACE,kBAAC,IAAD,CAAMM,KAAK,WACX,kBAAC,KAAD,CACEN,UAAU,eACVK,YAAY,uCACZoG,SAAU,SAACC,GAAD,OAAOL,EAAeK,IAChCC,MAAOnE,GAENtB,GACCA,EACGwE,QACC,SAACC,EAAK9C,GAAN,OACE8C,EAAIC,SAAS/C,EAAOQ,MAAQsC,EAA5B,sBAAsCA,GAAtC,CAA2C9C,EAAOQ,SACpD,IAEDT,KAAI,SAAAC,GAAM,OACT,kBAACmC,GAAD,CAAQhE,IAAK6B,EAAQ8D,MAAO9D,GAASA,QAK/C,kBAAC,IAAD,CAAMvC,KAAK,eAAeqB,QAAS2E,EAASvG,GAAG,YAEjD,kBAAC,GAAD,CACEmB,OAAQA,EACRqB,QAAS8C,EAAK9C,QACd1F,QAASA,EACT2F,YAAaA,U,mBCzIVoE,IAnDI3B,KAAXD,OAEK,SAAApF,GACX,IADoB,EASUuB,oBAAS,GATnB,mBASbtE,EATa,KASJmJ,EATI,OAUQ7E,mBAAS,IAVjB,mBAUbD,EAVa,KAUL+E,EAVK,OAWQ9E,mBAAS,MAXjB,gCAYgBA,mBAAS+E,KAAOC,MAAMC,OAAO,WAAW5H,aAZxD,mBAYbiE,EAZa,UAkBpB,OAJAnB,qBAAU,WAAO,IAAD,EACc1B,EAAMiH,MAAMC,QAd1B,SAAOnD,EAAWN,GAAlB,UAAArF,EAAAuI,OAAA,uDACdP,GAAW,GADG,WAAAhI,EAAA,MAEYV,MAAM,SAAD,OAAUqG,KAF3B,cAER6C,EAFQ,kBAAAxI,EAAA,MAGQwI,EAAYpI,QAHpB,OAGR2D,EAHQ,OAIdiE,GAAW,GACXC,EAAUlE,EAAQ1D,KAAK8E,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,MAAM,IAAMD,EAAKO,QAAQ,IAAK,SAL1D,qCAed0C,CAFc,EACN3C,UADM,EACKN,QAElB,IAED,yBAAKrD,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,KAAD,CAAM+G,GAAG,KACP,kBAAC,KAAD,CAAQzG,KAAK,OAAOP,GAAG,YAAYiH,OAAO,GAA1C,6DAsBJ,kBAAC,GAAD,CAAWnK,QAASA,EAASqE,OAAQA,EAAQuB,WAAYA,O,oBCrBhDwE,GA7BS,SAAC,GAQlB,IAPLpF,EAOI,EAPJA,MACAqF,EAMI,EANJA,SACApC,EAKI,EALJA,QACAqC,EAII,EAJJA,SACAC,EAGI,EAHJA,KACAhD,EAEI,EAFJA,MACAiD,EACI,EADJA,OAEA,OACE,kBAAC,KAAD,CACEC,UAAWH,EACXpF,QAASmF,EACTrF,MAAOA,EACPiD,QAASA,EACT9E,UAAU,WAEV,yBAAKoE,MAAOA,EAAOiD,OAAQA,EAAQE,MAAM,8BACvC,0BACEC,SAAS,UACTC,SAAS,UACTC,EAAE,85DACFN,KAAMA,OCpBRO,I,OAAaC,KAAbD,UAEFjD,GAAS,SAACC,EAAcC,GAAf,MAA6B,CAC1CD,eACAE,SAAU,CACR,CACEC,QAAS,WACTC,MAAO,CACL,CACEH,SAAUA,EACV1H,QAAS,iKAOX2K,GAAa5H,IAAb4H,SAEFC,G,2MACJnL,MAAQ,CAAEoL,SAAS,G,EAEnBC,UAAY,WACV,EAAKC,SAAS,CACZF,SAAS,K,EAIbG,SAAW,SAAAxB,GACT,EAAKuB,SAAS,CACZF,SAAS,K,EAIbI,aAAe,SAAAzB,GACb,EAAKuB,SAAS,CACZF,SAAS,K,wEAIH,IAAD,EACmBpI,KAAKC,MAAvBmC,EADD,EACCA,QAASqD,EADV,EACUA,KACjB,OACE,kBAACyC,GAAD,KACE,kBAAC,KAAD,CAAQvH,KAAK,OAAO0G,OAAO,EAAMrF,QAAShC,KAAKqI,UAAWjI,GAAG,eAA7D,uHAGA,kBAAC,IAAD,CACE8B,MAAOlC,KAAKC,MAAMiC,MAClBkG,QAASpI,KAAKhD,MAAMoL,QACpB/F,KAAMrC,KAAKuI,SACXlI,UAAU,kBACVoC,UAAU,EACVgG,SAAUzI,KAAKwI,aACfhG,WAAW,uCACXD,OAAO,6CACPmG,kBAAmB,CAAE,KAAQ,WAE7B,yBAAKrI,UAAU,mBACb,kBAAC,KAAD,CAAMA,UAAU,iBACd,kBAAC,KAAKsI,KAAN,CACEvH,MAAM,sBACLqE,EAAKmD,kBACJ,OACA7D,GAAO,IAAI,GAFZU,CAGC,kBAAC,KAAD,CAAO/E,YAAY,6CAAUL,UAAU,SAE3C,kBAAC,KAAKsI,KAAN,CACEvH,MAAM,8CACLqE,EAAKmD,kBACJ,YACA7D,GAAO,IAAI,GAFZU,CAGC,kBAAC,KAAD,CAAO/E,YAAY,6CAAUL,UAAU,SAE3C,kBAAC,KAAKsI,KAAN,CACEvH,MAAM,WACLqE,EAAKmD,kBACJ,UACA7D,GAAO,IAAI,GAFZU,CAGC,kBAAC,KAAD,CAAO/E,YAAY,6CAAUL,UAAU,QACzC,kBAAC,GAAD,CAEEoE,MAAM,KACNiD,OAAO,KACPvC,QAAQ,QACRsC,KAAK,UACLD,SAAS,OACTpF,IAEJ,kBAAC,KAAKuG,KAAN,CACEvH,MAAM,mCACN,kBAAC4G,GAAD,CAAUa,KAAM,EAAGxI,UAAU,cAAckE,KAAM,c,GAxEzCjE,IAAMwI,eAsFfvD,QAAKC,QAALD,CAAc4C,I,OCrG7B5J,QAAQC,IAAI/B,GAGZ,IAAM2F,GACF,uOAoEW2G,gBACX,SAAA/L,GAAK,MAAK,CACNE,QAASF,EAAMH,eAAeK,WAGlC,CACIT,SANOsM,CASbxD,KAAKC,QAALD,EA1EY,SAAC,GAAuC,IAArCE,EAAoC,EAApCA,KAAMhJ,EAA8B,EAA9BA,MAAOS,EAAuB,EAAvBA,QAAYwI,EAAW,0CAG3CsD,EAAc,SAAAjC,GAChBA,EAAEkC,UACFxD,EAAKyD,gBAAe,SAACvK,EAAKjB,GACjBiB,GACDlC,EAAMiB,OAUlB,OAJAiE,qBAAU,WACNpD,QAAQC,IAAIkH,KACb,IAGC,yBAAKtF,GAAG,SAEJ,kBAAC,KAAD,CAAMC,UAAU,aAAa8I,aAAa,MAAMC,SAAUJ,GACtD,uDAAQ,kBAAC,IAAD,CAAMrI,KAAK,UACnB,6BACI,kBAAC,KAAKgI,KAAN,KACKlD,EAAKmD,kBACF,UACA7D,GAAO,IAAI,GAFdU,CAGC,kBAAC,KAAD,CAAO/E,YAAY,yDAEzB,kBAAC,GAAD,CAEI+D,MAAM,KACNiD,OAAO,KACPvC,QAAQ,QACRsC,KAAK,UACLD,SAAS,OACXpF,KAIN,yBAAK/B,UAAU,cACX,kBAAC,KAAKsI,KAAN,KACKlD,EAAKmD,kBACF,YACA7D,GAAO,IAAI,GAFdU,CAGC,kBAAC,KAAD,CAAO/E,YAAY,4FAEzB,kBAAC,KAAD,CACIsB,QAASgH,EACT3I,UAAU,YACVM,KAAK,UACLzD,QAASA,GAJb,6BAWJ,kBAAC,GAAD,CAAUkF,QAASA,GAASF,MAAM,yK,8BCvE1CmH,I,OAASC,KAATD,MAqDOE,GAnDA,WACX,OACI,4BAAQnJ,GAAG,UACP,yBAAKC,UAAU,cACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,uBAAGmJ,KAAK,KACJ,kBAAC,IAAD,CAAM7I,KAAK,eACX,8BACI,kBAAC0I,GAAD,CAAMI,QAAM,EAACC,MAAI,GAAjB,iBAMZ,kBAAC,KAAD,CAAS/I,KAAK,aACd,yBAAKN,UAAU,uBAEP,kBAAC,IAAD,CAAMM,KAAK,UAMnB,kBAAC,KAAD,CAASA,KAAK,aACd,yBAAKN,UAAU,aACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAAQ8B,KAAM,kBAAC,IAAD,CAAMxB,KAAK,WACzB,kBAAC0I,GAAD,CAAM1I,KAAK,aAAX,wCAEI,kBAAC,IAAD,CAAMA,KAAK,iB,OCS5BgJ,OAlCf,WACE,OACE,yBAAKtJ,UAAU,OACb,yBAAKD,GAAG,iBACN,kBAAC,GAAD,MACA,yBAAKA,GAAG,aACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,IAAInF,OAAQ,SAAAzE,GAAK,OAAI,kBAAC,GAAUA,MAElD,kBAAC,IAAD,CACE2J,OAAK,EACLC,KAAK,4BACLnF,OAAQ,SAAAzE,GAAK,OAAI,kBAAC,GAASA,MAG7B,kBAAC,IAAD,CACE2J,OAAK,EACLC,KAAK,SACLnF,OAAQ,SAAAzE,GAAK,OAAI,kBAAC,GAAUA,MAG9B,kBAAC,IAAD,CACE4J,KAAK,IACLnF,OAAQ,SAAAzE,GAAK,OAAI,kBAAC,EAAD,eACfC,UAAU,2GACVC,aAAa,OAASF,YCvBlB6J,QACW,cAA7B3K,OAAO4K,SAASC,UAEe,UAA7B7K,OAAO4K,SAASC,UAEhB7K,OAAO4K,SAASC,SAAS9C,MACvB,2D,kBCNA3H,GAAQR,IAEdkL,IAASvF,OAAO,kBAAC,IAAD,CAAQ9B,QAASsH,GAAjB,IAAiC,kBAAC,IAAD,CAAU3K,MAAOA,IAAO,kBAAC,GAAD,QAA6BsC,SAASsI,eAAe,SDqHxH,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"js/main.2997ddbb.chunk.js","sourcesContent":["import { createActions } from 'redux-actions';\r\n\r\nconst {\r\n  login,\r\n  getUser,\r\n  getUserSuccess,\r\n  getUserFailure,\r\n} = createActions(\r\n  'LOGIN',\r\n  'GET_USER',\r\n  'GET_USER_SUCCESS',\r\n  'GET_USER_FAILURE'\r\n);\r\n\r\nexport {\r\n  login,\r\n  getUser,\r\n  getUserSuccess,\r\n  getUserFailure,\r\n};","import { handleActions } from 'redux-actions';\r\nimport { combineReducers } from 'redux';\r\nimport * as authAction from './actions';\r\n\r\n\r\nconst initState = {\r\n    loading: false,\r\n    user: null,\r\n    status: \"IDLE\",\r\n    errorMessage: null\r\n}\r\n\r\nexport const authentication = handleActions({\r\n    [authAction.login]: (state, _payload) => {\r\n        return { ...state, loading: true }\r\n\r\n    },\r\n    [authAction.getUser]: (state, _payload) => ({\r\n        ...state, loading: true\r\n    }),\r\n    [authAction.getUserSuccess]: (state, { payload }) => ({\r\n        ...state, loading: false, user: payload, status: \"SUCCESS\"\r\n    }),\r\n    [authAction.getUserFailure]: (state, { payload }) => ({\r\n        ...state, loading: false, errorMessage: payload.message, status: \"ERROR\"\r\n    }),\r\n\r\n}, initState)\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { authentication } from '../component/auth/redux/reducer'\r\n\r\nexport default combineReducers({\r\n    authentication\r\n});","export const loginRequest = values => fetch(\"/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(values)\r\n})","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { loginRequest } from './requests';\r\nimport { login, getUserFailure, getUserSuccess } from './actions';\r\n\r\nasync function* loginSaga(action) {\r\n    const { payload } = action;\r\n    const response = await loginRequest(payload)\r\n    console.log(response)\r\n    const data = await response.json()\r\n    console.log(data)\r\n    try {\r\n        getUserSuccess(data.user)\r\n\r\n        // response.json().then(({ user }) => getUserSuccess(user))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport function* loginWatcher() {\r\n    yield takeEvery(login.toString(), loginSaga);\r\n}","import { fork } from 'redux-saga/effects';\r\nimport { loginWatcher } from '../component/auth/redux/sagas'\r\n\r\n\r\nexport default function* () {\r\n    yield fork(loginWatcher);\r\n}","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga';\r\n// import { redirectMiddleware } from '../middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducer'\r\nimport sagas from './saga';\r\n\r\n\r\nconst createAppStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\r\n    composeWithDevTools ||\r\n    compose;\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware)),\r\n\r\n  );\r\n  \r\n  sagaMiddleware.run(sagas);\r\n  \r\n  return store;\r\n};\r\n\r\n\r\nexport default createAppStore;","import { createBrowserHistory } from 'history';\r\nconst customHistory = createBrowserHistory();\r\nexport default customHistory;","import React from 'react';\r\n\r\nimport './NotFoundPage.css';\r\n\r\nclass notFoundPage extends React.Component {\r\n  render() {\r\n    const { errorText, errorCaption } = this.props;\r\n    return (\r\n      <div id=\"notFoundPage\">\r\n        <h2 className=\"errorCaption\">{errorCaption}</h2>\r\n        <div className=\"errorText\">{errorText}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default notFoundPage;\r\n","import React from 'react';\r\nimport { Modal, Icon } from 'antd';\r\nimport './modal.css';\r\n\r\nconst confirm = Modal.confirm;\r\n\r\nexport const ConfirmBlue = (obj) => {\r\n    confirm({\r\n        title: 'Внимание!',\r\n        icon: <Icon type=\"question-circle\" />,\r\n        content: <span>Вы действительно хотите добавить нового пользоавателя?</span>,\r\n        cancelText: 'Отмена',\r\n        okText: 'Добавить',\r\n        centered: true,\r\n        className: 'blueConfirm',\r\n        ...obj\r\n    });\r\n};\r\n\r\nexport const showSuccessModal = (obj, seconds) => {\r\n    // если передано время закрытия используем его (если нет = 5)\r\n    let secondsToClose = (seconds ? seconds : 5);\r\n    // создаем модальное окно\r\n    const successEmployeeAction = Modal.confirm(obj);\r\n    // обновляем кнопку\r\n    setNewButtonCaption(successEmployeeAction, obj.okText, secondsToClose);\r\n    // обновляем состоянии кнопки по счеткику\r\n    const timer = setInterval(() => {\r\n        secondsToClose -= 1;\r\n        setNewButtonCaption(successEmployeeAction, obj.okText, secondsToClose);\r\n    }, 1000);\r\n    // закрываем окно по окончании отсчета\r\n    setTimeout(() => {\r\n        clearInterval(timer);\r\n        successEmployeeAction.destroy();\r\n    }, secondsToClose * 1000);\r\n};\r\n\r\n// дбавляем кол-во оставшихся до закрытия окна секунд к подписи кнопки\r\nconst setNewButtonCaption = (comp, text, seconds) => {\r\n    comp.update({\r\n        okText: text + \" (\" + seconds + \")\",\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { Icon, Table } from \"antd\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { ConfirmBlue } from \"../modal\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst placeholder = <Icon type=\"loading\" style={{ fontSize: 44 }} spin />;\r\n\r\nconst normTime = time => {\r\n  let newTime;\r\n  var h = (time / 60) ^ 0;\r\n  if (h) {\r\n    var m = time % 60;\r\n    if (m < 10) m = \"0\" + m;\r\n    newTime = h + \" ч \" + m + \" м\";\r\n  } else {\r\n    newTime = time + \" м\";\r\n  }\r\n  return newTime;\r\n};\r\n\r\nconst headers = [\r\n  { label: \"Дата\", key: \"date\" },\r\n  { label: \"Фамилия\", key: \"last_name\" },\r\n  { label: \"Время\", key: \"running_min\" },\r\n  { label: \"Дней отработано\", key: \"day_worked\" },\r\n  { label: \"Дней > 4\", key: \"day_more\" },\r\n  { label: \"Дней < 4\", key: \"day_less\" }\r\n];\r\n\r\nconst DownloadBtn = ({ result }) => {\r\n  const [csvLink, setCsvLink] = useState(null);\r\n  useEffect(() => {\r\n    let link = document.getElementsByClassName(\"csvLink\");\r\n    setCsvLink(link.item(0) || null);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Icon\r\n        type=\"file-excel\"\r\n        onClick={() =>\r\n          ConfirmBlue({\r\n            title: \"Внимание!\",\r\n            icon: <Icon type=\"warning\" />,\r\n            content: (\r\n              <span>Вы действительно желаете скачать файл результатов?</span>\r\n            ),\r\n            onOk: () => {\r\n              csvLink.click();\r\n            },\r\n            okText: \"Согласен\"\r\n          })\r\n        }\r\n      />\r\n      <CSVLink\r\n        className=\"csvLink\"\r\n        filename={\"Time-Tracker.csv\"}\r\n        data={result}\r\n        headers={headers}\r\n      ></CSVLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const data = [\r\n//   { details: { firstName: \"Ahmed\", lastName: \"Tomi\" }, job: \"manager\" },\r\n//   { details: { firstName: \"John\", lastName: \"Jones\" }, job: \"developer\" }\r\n// ];\r\n\r\nconst TimeTable = ({ result, loading, history, monthFilter, daysFilter }) => {\r\n  const renderColumns = () => {\r\n    let cols = [\r\n      {\r\n        title: \"Дата\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"10%\",\r\n        render: date => <div>{date && date}</div>,\r\n        sorter: (a, b) => {\r\n          return a.date.localeCompare(b.date);\r\n        }\r\n      },\r\n      {\r\n        title: \"Фамилия\",\r\n        dataIndex: \"last_name\",\r\n        key: \"last_name\",\r\n        width: \"10%\",\r\n        render: last_name => <div>{last_name && last_name}</div>,\r\n        sorter: (a, b) => {\r\n          return a.last_name.localeCompare(b.last_name);\r\n        }\r\n      },\r\n      {\r\n        title: \"Время\",\r\n        dataIndex: \"running_min\",\r\n        key: \"running_min\",\r\n        width: \"10%\",\r\n        render: running_min => <div>{running_min && running_min}</div>,\r\n        sorter: (a, b) => {\r\n          return b.running_min.localeCompare(a.running_min);\r\n        }\r\n      }\r\n    ];\r\n\r\n    const addingCols = [\r\n      {\r\n        title: \"Дней отработано\",\r\n        dataIndex: \"day_worked\",\r\n        key: \"day_worked\",\r\n        width: \"10%\",\r\n        render: day_worked => <div>{day_worked && day_worked}</div>,\r\n        sorter: (a, b) => {\r\n          return b.day_worked - a.day_worked;\r\n        }\r\n      },\r\n      {\r\n        title: \"дней > 4 часов\",\r\n        dataIndex: \"day_more\",\r\n        key: \"day_more\",\r\n        width: \"10%\",\r\n        render: day_more => <div>{day_more && day_more}</div>,\r\n        sorter: (a, b) => {\r\n          return b.day_more - a.day_more;\r\n        }\r\n      },\r\n      {\r\n        title: \"дней < 4 часов\",\r\n        dataIndex: \"day_less\",\r\n        key: \"day_less\",\r\n        width: \"10%\",\r\n        render: day_less => <div>{day_less && day_less}</div>,\r\n        sorter: (a, b) => {\r\n          return b.day_less - a.day_less;\r\n        }\r\n      }\r\n    ];\r\n    return monthFilter !== undefined ? [...cols, ...addingCols] : [...cols];\r\n  };\r\n\r\n  const renderResult = () => {\r\n    if (monthFilter !== undefined) {\r\n      return result\r\n        .map((record, index) => ({\r\n          ...record,\r\n          key: index,\r\n          running_min: record.running_min && normTime(record.running_min),\r\n          day_worked: String(\r\n            record.days.filter(r => r.date.slice(3) == monthFilter).length\r\n          ),\r\n          day_more: String(\r\n            record.days.filter(\r\n              r => r.date.slice(3) == monthFilter && r.running_min > 240\r\n            ).length\r\n          ),\r\n          day_less: String(\r\n            record.days.filter(\r\n              r => r.date.slice(3) == monthFilter && r.running_min < 240\r\n            ).length\r\n          )\r\n        }))\r\n        .filter(record =>\r\n          monthFilter\r\n            ? record.date == monthFilter\r\n            : record.date.slice(3) == daysFilter\r\n        );\r\n    } else {\r\n      return result.map((record, index) => ({\r\n        ...record,\r\n        key: index,\r\n        running_min: record.running_min && normTime(record.running_min)\r\n      }));\r\n    }\r\n  };\r\n\r\n  const getDetail = (last_name, date) =>\r\n    monthFilter && history.push(`/detail/${last_name}/${date}`);\r\n\r\n  return (\r\n    <div className=\"Table-wrapper\">\r\n      {!loading && (\r\n        <div className=\"csv-area\">\r\n          <DownloadBtn result={renderResult()} />\r\n        </div>\r\n      )}\r\n\r\n      <Table\r\n        onRow={(record, index) => ({\r\n          index,\r\n          onClick: () =>\r\n            monthFilter &&\r\n            getDetail(record.last_name, monthFilter.replace(\"/\", \"_\"))\r\n        })}\r\n        locale={{ emptyText: loading ? placeholder : \"Нету результатов...\" }}\r\n        dataSource={renderResult()}\r\n        columns={renderColumns()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeTable;\r\n","export const config = (initialValue, required) => ({\r\n    initialValue,\r\n    validate: [\r\n        {\r\n            trigger: \"onChange\",\r\n            rules: [\r\n                {\r\n                    required: required,\r\n                    message: \"обязательное для заполнения\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n});","import React, { useState, useEffect } from \"react\";\r\nimport TimeTable from \"../table\";\r\nimport { Form, Input, Button, Icon, Select } from \"antd\";\r\nimport { ConfirmBlue, showSuccessModal } from \"../modal\";\r\nimport { config } from '../conf';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst addUser = async values => {\r\n  const rawResponse = await fetch(\"/user\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(values)\r\n  });\r\n  const content = await rawResponse.json();\r\n  switch (content.status) {\r\n    case 201:\r\n      showSuccessModal({\r\n        title: \"Успех!\",\r\n        content: `Пользователь ${values[\"last_name\"]}, успешно добавлен!`,\r\n        className: \"vehicleSuccess\",\r\n        okText: \"Готово\",\r\n        icon: \"check\",\r\n        closable: true,\r\n        maskClosable: true,\r\n        centered: true\r\n      });\r\n      break;\r\n\r\n    case 302:\r\n      showSuccessModal({\r\n        title: \"Ошибка!\",\r\n        content: content.message,\r\n        className: \"vehicleSuccess vehicleSuccess_warning\",\r\n        okText: \"Готово\",\r\n        icon: \"warning\",\r\n        closable: true,\r\n        maskClosable: true,\r\n        centered: true\r\n      });\r\n\r\n      break;\r\n\r\n    default:\r\n      showSuccessModal({\r\n        title: \"Ошибка!\",\r\n        content: content.message,\r\n        className: \"vehicleSuccess vehicleSuccess_warning\",\r\n        okText: \"Готово\",\r\n        icon: \"warning\",\r\n        closable: true,\r\n        maskClosable: true,\r\n        centered: true\r\n      });\r\n      break;\r\n  }\r\n};\r\n\r\nfunction Month({ form, ...rest }) {\r\n  const onSubmit = e => {\r\n    e.persist();\r\n    form.validateFields((err, values) => {\r\n      if (!err) {\r\n        addUser(values);\r\n        form.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  const calculateDate = (retrieve) => {\r\n    if (!retrieve.days || !retrieve.month) {\r\n      alert('error in fetch api')\r\n      return\r\n    }\r\n    let scope_days = {};\r\n    const userArr = retrieve.month.reduce(\r\n      (acc, record) =>\r\n        acc.includes(record.last_name) ? acc : [...acc, record.last_name],\r\n      []\r\n    ).forEach(user => {\r\n      scope_days[user] = retrieve.days.filter(day => day.last_name == user)\r\n    })\r\n\r\n    return retrieve.month.map(record => ({ ...record, 'days': scope_days[record.last_name] }))\r\n  }\r\n\r\n  const getMonth = async values => {\r\n    setLoading(true);\r\n    const rawResponse = await fetch(\"/month_retrieve\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(values)\r\n    });\r\n    const content = await rawResponse.json();\r\n    setLoading(false);\r\n    setResult(content.data);\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState([]);\r\n  const [errors, setErrors] = useState(null);\r\n  const [monthFilter, setMonthFilter] = useState(moment.utc().format(\"MM/YYYY\").toString())\r\n\r\n  // const monthChange = e => getMonth({ 'month': e });\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    const rawResponse = await fetch(\"/fetch\");\r\n    const content = await rawResponse.json();\r\n    setLoading(false);\r\n    setResult(calculateDate(content));\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <div className=\"row\">\r\n            {/* <Icon type=\"user\" />\r\n          </div>\r\n          <Form className=\"user-form\">\r\n            <Form.Item>\r\n              {form.getFieldDecorator(\r\n                \"name\",\r\n                config(\"\", true)\r\n              )(<Input placeholder=\"Укажите имя\" className=\"sm\" />)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {form.getFieldDecorator(\r\n                \"last_name\",\r\n                config(\"\", true)\r\n              )(<Input placeholder=\"Укажите фамилию\" className=\"sm\" />)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {form.getFieldDecorator(\r\n                \"api_key\",\r\n                config(\"\", true)\r\n              )(<Input placeholder=\"Введите Api-key\" className=\"md\" />)}\r\n            </Form.Item>\r\n            <div className=\"btn\">\r\n              <Button\r\n                onClick={e =>\r\n                  ConfirmBlue({\r\n                    onOk: () => onSubmit(e)\r\n                  })\r\n                }\r\n                type=\"primary\"\r\n              >\r\n                Добавить\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div> */}\r\n        <div>\r\n          <div className=\"table-hat\">\r\n            <div>\r\n              <Icon type=\"idcard\" />\r\n              <Select\r\n                className=\"select-month\"\r\n                placeholder=\"месяца\"\r\n                onChange={(e) => setMonthFilter(e)}\r\n                value={monthFilter}\r\n              >\r\n                {result &&\r\n                  result\r\n                    .reduce(\r\n                      (acc, record) =>\r\n                        acc.includes(record.date) ? acc : [...acc, record.date],\r\n                      []\r\n                    )\r\n                    .map(record => (\r\n                      <Option key={record} value={record}>{record}</Option>\r\n                    ))}\r\n              </Select>\r\n            </div>\r\n\r\n            <Icon type=\"clock-circle\" onClick={getData} id=\"update\" />\r\n          </div>\r\n          <TimeTable\r\n            result={result}\r\n            history={rest.history}\r\n            loading={loading}\r\n            monthFilter={monthFilter} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form.create()(Month);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Select } from \"antd\";\r\nimport TimeTable from \"../table\";\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst Days = props => {\r\n  const getData = async (last_name, date) => {\r\n    setLoading(true);\r\n    const rawResponse = await fetch(`/days/${last_name}`)\r\n    const content = await rawResponse.json();\r\n    setLoading(false);\r\n    setResult(content.data.filter(r => r.date.slice(3) == date.replace('_', '/')))\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState([]);\r\n  const [errors, setErrors] = useState(null);\r\n  const [daysFilter, setDaysFilter] = useState(moment.utc().format(\"MM/YYYY\").toString())\r\n\r\n  useEffect(() => {\r\n    const { last_name, date } = props.match.params;\r\n    getData(last_name, date);\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Link to=\"/\">\r\n          <Button type=\"link\" id=\"index-btn\" ghost={true}>\r\n            На главную\r\n          </Button>\r\n        </Link>\r\n        {/* <Select\r\n          className=\"select-month\"\r\n          placeholder=\"месяца\"\r\n          onChange={(e) => setDaysFilter(e)}\r\n          value={daysFilter}\r\n        >\r\n          {result &&\r\n            result\r\n              .reduce(\r\n                (acc, record) =>\r\n                  acc.includes(record.date.slice(3)) ? acc : [...acc, record.date.slice(3)],\r\n                []\r\n              )\r\n              .map(record => (\r\n                <Option key={record} value={record}>{record}</Option>\r\n              ))}\r\n        </Select> */}\r\n      </div>\r\n      <TimeTable loading={loading} result={result} daysFilter={daysFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Days;\r\n","import React from 'react';\r\nimport { Popover } from 'antd';\r\n\r\nconst questionPopover = ({\r\n  title,\r\n  children,\r\n  trigger,\r\n  position,\r\n  fill,\r\n  width,\r\n  height,\r\n}) => {\r\n  return (\r\n    <Popover\r\n      placement={position}\r\n      content={children}\r\n      title={title}\r\n      trigger={trigger}\r\n      className='popover'\r\n    >\r\n      <svg width={width} height={height} xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M12 0C5.37187 0 0 5.37187 0 12C0 18.6281 5.37187 24 12 24C18.6281 24 24 18.6281 24 12C24 5.37187 18.6281 0 12 0ZM19.2914 19.2914C18.3445 20.2383 17.2406 20.9836 16.0125 21.5016C14.7422 22.0406 13.3922 22.3125 12 22.3125C10.6078 22.3125 9.25781 22.0406 7.9875 21.5039C6.75938 20.9836 5.65781 20.2406 4.70859 19.2938C3.76172 18.3469 3.01641 17.243 2.49844 16.0148C1.95938 14.7422 1.6875 13.3922 1.6875 12C1.6875 10.6078 1.95938 9.25781 2.49609 7.9875C3.01641 6.75938 3.75938 5.65781 4.70625 4.70859C5.65312 3.76172 6.75703 3.01641 7.98516 2.49844C9.25781 1.95938 10.6078 1.6875 12 1.6875C13.3922 1.6875 14.7422 1.95938 16.0125 2.49609C17.2406 3.01641 18.3422 3.75938 19.2914 4.70625C20.2383 5.65312 20.9836 6.75703 21.5016 7.98516C22.0406 9.25781 22.3125 10.6078 22.3125 12C22.3125 13.3922 22.0406 14.7422 21.5039 16.0125C20.9836 17.2406 20.2406 18.3445 19.2914 19.2914ZM11.8781 15.5602C11.85 15.5602 11.8219 15.5578 11.7938 15.5555C11.3297 15.5109 10.9922 15.0961 11.0367 14.632C11.1516 13.4625 12.0094 12.518 12.9539 11.5734C14.4656 10.0617 14.4914 9.58125 14.5172 9.07266C14.5477 8.47969 14.3297 7.90547 13.8984 7.45312C13.4086 6.9375 12.7148 6.64219 11.9953 6.64219C11.993 6.64219 11.9906 6.64219 11.9906 6.64219C10.6055 6.64453 9.47578 7.77422 9.47578 9.16172C9.47578 9.62813 9.09844 10.0055 8.63203 10.0055C8.16563 10.0055 7.78828 9.62813 7.78828 9.16172C7.78828 8.03906 8.22422 6.98438 9.01641 6.18984C9.80859 5.39531 10.8633 4.95703 11.9859 4.95469C13.1695 4.95234 14.3133 5.43984 15.1219 6.29063C15.8742 7.08281 16.2586 8.10234 16.2023 9.16172C16.1437 10.2469 15.8109 11.1023 14.1469 12.7664C13.3031 13.6102 12.7711 14.243 12.7172 14.7984C12.675 15.2344 12.307 15.5602 11.8781 15.5602ZM10.8328 18.0281C10.8328 18.3907 11.0262 18.7257 11.3402 18.907C11.6542 19.0883 12.0411 19.0883 12.3551 18.907C12.6691 18.7257 12.8625 18.3907 12.8625 18.0281C12.8625 17.4676 12.4081 17.0133 11.8477 17.0133C11.2872 17.0133 10.8328 17.4676 10.8328 18.0281Z\"\r\n          fill={fill}\r\n        />\r\n      </svg>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default questionPopover;\r\n","import React from 'react'\r\nimport { Modal, Button, Form, Input, Row } from 'antd';\r\nimport './showModal.css'\r\nimport QuestionPopover from '../questionPopover';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst config = (initialValue, required) => ({\r\n  initialValue,\r\n  validate: [\r\n    {\r\n      trigger: \"onChange\",\r\n      rules: [\r\n        {\r\n          required: required,\r\n          message: \"обязательное для заполнения\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n});\r\n\r\nconst { Fragment } = React;\r\n\r\nclass ShowModal extends React.PureComponent {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { content, form } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Button type='link' ghost={true} onClick={this.showModal} id='create-user'>\r\n          Создать пользователя\r\n        </Button>\r\n        <Modal\r\n          title={this.props.title}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          className=\"register-window\"\r\n          centered={true}\r\n          onCancel={this.handleCancel}\r\n          cancelText=\"Отмена\"\r\n          okText=\"Создать\"\r\n          cancelButtonProps={{ \"type\": 'danger' }}\r\n        >\r\n          <div className='register-layout'>\r\n            <Form className='register-form'>\r\n              <Form.Item\r\n                label=\"Имя\">\r\n                {form.getFieldDecorator(\r\n                  \"name\",\r\n                  config(\"\", true)\r\n                )(<Input placeholder=\"Укажите\" className=\"sm\" />)}\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Фамилия\">\r\n                {form.getFieldDecorator(\r\n                  \"last_name\",\r\n                  config(\"\", true)\r\n                )(<Input placeholder=\"Укажите\" className=\"sm\" />)}\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"api-key\">\r\n                {form.getFieldDecorator(\r\n                  \"api_key\",\r\n                  config(\"\", true)\r\n                )(<Input placeholder=\"Укажите\" className=\"md\" />)}\r\n                <QuestionPopover\r\n\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  trigger=\"click\"\r\n                  fill=\"#00a8ff\"\r\n                  position=\"top\"\r\n                >{content}</QuestionPopover>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"О себе\">\r\n                <TextArea rows={3} className='about-input' cols={43}/>\r\n\r\n              </Form.Item>\r\n\r\n\r\n            </Form>\r\n\r\n          </div>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ShowModal);","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Select, Form, Input, Icon } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport { config } from '../conf';\r\nimport { login } from './redux/actions'\r\nimport QuestionPopover from '../questionPopover';\r\nimport Register from '../showModal';\r\nimport './Login.css';\r\n\r\nconsole.log(login)\r\n\r\n\r\nconst content = (\r\n    <div>api-key можно посмотреть https://wakatime.com/dashboard в настройках</div>\r\n)\r\n\r\nconst Login = ({ form, login, loading, ...rest }) => {\r\n\r\n\r\n    const submitLogin = e => {\r\n        e.persist();\r\n        form.validateFields((err, values) => {\r\n            if (!err) {\r\n                login(values)\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(rest)\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"login\">\r\n\r\n            <Form className=\"login-form\" autoComplete=\"off\" onSubmit={submitLogin}>\r\n                <h1>Вход<Icon type=\"user\" /></h1>\r\n                <div>\r\n                    <Form.Item>\r\n                        {form.getFieldDecorator(\r\n                            \"api_key\",\r\n                            config(\"\", true)\r\n                        )(<Input placeholder=\"Укажите api-key\" />)}\r\n                    </Form.Item>\r\n                    <QuestionPopover\r\n\r\n                        width=\"24\"\r\n                        height=\"24\"\r\n                        trigger=\"click\"\r\n                        fill=\"#00a8ff\"\r\n                        position=\"top\"\r\n                    >{content}</QuestionPopover>\r\n\r\n                </div>\r\n\r\n                <div className='login-area'>\r\n                    <Form.Item>\r\n                        {form.getFieldDecorator(\r\n                            \"last_name\",\r\n                            config(\"\", true)\r\n                        )(<Input placeholder=\"Укажите фамилию\" />)}\r\n                    </Form.Item>\r\n                    <Button\r\n                        onClick={submitLogin}\r\n                        className=\"login-btn\"\r\n                        type=\"primary\"\r\n                        loading={loading}\r\n                    >\r\n\r\n                        Вход\r\n                    </Button>\r\n                </div>\r\n\r\n                <Register content={content} title=\"Создание нового пользователя\" />\r\n\r\n            </Form>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        loading: state.authentication.loading\r\n\r\n    }),\r\n    {\r\n        login\r\n    }\r\n\r\n)(Form.create()(Login));","import React, { useState, useEffect } from 'react';\r\nimport { Divider, Icon, Typography, Avatar } from 'antd';\r\nimport './Header.css';\r\nconst { Text } = Typography;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header id=\"header\">\r\n            <div className=\"header-row\">\r\n                <div className='header-row-container'>\r\n                    <div className='item-cell'>\r\n                        <a href=\"#\">\r\n                            <Icon type=\"experiment\" />\r\n                            <span>\r\n                                <Text strong code>Waka-Prime</Text>\r\n\r\n                            </span>\r\n                        </a>\r\n\r\n                    </div>\r\n                    <Divider type=\"vertical\" />\r\n                    <div className='item-cell info-cell'>\r\n\r\n                            <Icon type=\"bell\" />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <Divider type=\"vertical\" />\r\n                    <div className='item-cell'>\r\n                        <div className=\"user-area\">\r\n                            <Avatar icon={<Icon type=\"user\" />} />\r\n                            <Text type=\"secondary\">Ширнин</Text>\r\n\r\n                                <Icon type=\"logout\" />\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useEffect } from \"react\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport NotFoundPage from './component/notFoundPage'\r\nimport Month from \"./component/month\";\r\nimport Days from \"./component/day\";\r\nimport Login from \"./component/auth\";\r\nimport Header from './component/header';\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"mainContainer\">\r\n        <Header />\r\n        <div id=\"mainSheet\">\r\n          <Switch>\r\n            <Route exact path=\"/\" render={props => <Month {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/detail/:last_name/:date/\"\r\n              render={props => <Days {...props} />}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/login\"\r\n              render={props => <Login {...props} />}\r\n            />\r\n\r\n            <Route\r\n              path=\"*\"\r\n              render={props => <NotFoundPage\r\n                errorText=\"Страница не найдена\"\r\n                errorCaption=\"404\"{...props} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport createAppStore from './store/store';\r\nimport createHistory from './middleware/history';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst store = createAppStore();\r\n\r\nReactDOM.render(<Router history={createHistory}> <Provider store={store}><App /></Provider></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}